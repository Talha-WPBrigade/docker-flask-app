name: CI - Test, Scan, Build & Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:    # allows manual run from Actions tab

env:
  IMAGE_NAME: flask-app

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    outputs:
      tests_passed: ${{ steps.run-tests.outcome }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run pytest (generate JUnit XML + coverage)
        id: run-tests
        run: |
          mkdir -p reports
          pytest --junitxml=reports/test-results.xml --cov=. --cov-report=xml
      - name: Upload test results artifact
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: reports/test-results.xml

  security:
    name: Security scans (depends on test)
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Bandit SAST (Python)
        run: |
          python -m pip install bandit
          mkdir -p reports
          bandit -r . -f json -o reports/bandit-report.json || true
      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: reports/bandit-report.json

      - name: Build image for Trivy scan (local image)
        run: docker build -t ${{ env.IMAGE_NAME }}:ci-scan .

      - name: Run Trivy image scan
        uses: aquasecurity/trivy-action@v0.10.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:ci-scan
          format: 'json'
          output: 'reports/trivy-image-report.json'
          exit-code: '1'            # non-zero exit on HIGH/CRITICAL -> fail job
          severity: 'HIGH,CRITICAL'
      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: reports/trivy-image-report.json

  build_and_push:
    name: Build & Push image (only if tests & scans pass)
    needs: [test, security]
    runs-on: ubuntu-latest
    if: ${{ needs.test.result == 'success' && needs.security.result == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for buildx)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (Buildx)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:1.0
          file: ./Dockerfile
